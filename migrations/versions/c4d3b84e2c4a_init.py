"""init

Revision ID: c4d3b84e2c4a
Revises: 
Create Date: 2023-05-08 12:03:34.001470

"""
from datetime import datetime

from alembic import op
import sqlalchemy as sa
from sqlalchemy import Sequence
from sqlalchemy.sql.ddl import CreateSequence, DropSequence

# revision identifiers, used by Alembic.
revision = 'c4d3b84e2c4a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    content_type_table = op.create_table('content_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type_name', sa.Text(), nullable=False),
    sa.Column('validate_as', sa.Text(), nullable=False),
    sa.Column('content_type', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False, default=datetime.utcnow()),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_content_type_type_name'), 'content_type', ['type_name'], unique=True)

    op.bulk_insert(content_type_table, [
        {
            "type_name": "JSON",
            "description": 'We return JSON in response body, like {"foo": "bar"}',
            "validate_as": "json",
            "content_type": "application/json"
        },
        {
            "type_name": "XML",
            "description": 'We return XML in response body, like <foo>bar</foo>',
            "validate_as": "xml",
            "content_type": "application/xml"
        },
        {
            "type_name": "TEXT",
            "description": 'We return TEXT in response body, like foo bar',
            "validate_as": "text",
            "content_type": "application/text"
        },
    ])

    disallowed_headers_table = op.create_table('disallowed_headers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('header_name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_disallowed_headers_header_name'), 'disallowed_headers', ['header_name'], unique=True)
    op.bulk_insert(disallowed_headers_table, [
        {
            "header_name": "content-type",
        },
        {
            "header_name": "x-python-version",
        },
        {
            "header_name": "date",
        },
        {
            "header_name": "server",
        },
        {
            "header_name": "x-powered-by",
        },
        {
            "header_name": "content-length",
        },
        {
            "header_name": "x-process-time-microseconds",
        },
        {
            "header_name": "real-server-time",
        },
    ])
    op.create_table('session',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False, default=datetime.utcnow()),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_session_token'), 'session', ['token'], unique=True)
    op.create_table('room',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uri_hash', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False, default=datetime.utcnow()),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('headers', sa.JSON(), nullable=False),
    sa.Column('require_parameters', sa.JSON(), nullable=False),
    sa.Column('on_invalid_status_code', sa.Integer(), nullable=False),
    sa.Column('wait_microseconds', sa.Integer(), nullable=False),
    sa.Column('content_type_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['content_type_id'], ['content_type.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_room_uri_hash'), 'room', ['uri_hash'], unique=False)
    op.execute(CreateSequence(Sequence('user_request_id_seq')))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_room_uri_hash'), table_name='room')
    op.drop_table('room')
    op.drop_index(op.f('ix_session_token'), table_name='session')
    op.drop_table('session')
    op.drop_index(op.f('ix_disallowed_headers_header_name'), table_name='disallowed_headers')
    op.drop_table('disallowed_headers')
    op.drop_index(op.f('ix_content_type_type_name'), table_name='content_type')
    op.drop_table('content_type')
    op.execute(DropSequence(Sequence('user_request_id_seq')))
    # ### end Alembic commands ###
